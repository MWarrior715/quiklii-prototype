version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: quiklii_postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: quiklii_db
      POSTGRES_USER: quiklii_user
      POSTGRES_PASSWORD: quiklii_password
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d
    networks:
      - quiklii_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U quiklii_user -d quiklii_db"]
      interval: 30s
      timeout: 10s
      retries: 3

  # pgAdmin - Interface web para PostgreSQL
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: quiklii_pgadmin
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@quiklii.com
      PGADMIN_DEFAULT_PASSWORD: admin123
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "5050:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    networks:
      - quiklii_network
    depends_on:
      postgres:
        condition: service_healthy

  # Redis para cache y sesiones (opcional, para uso futuro)
  redis:
    image: redis:7-alpine
    container_name: quiklii_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - quiklii_network
    command: redis-server --appendonly yes --requirepass quiklii_redis_password

volumes:
  postgres_data:
    driver: local
  pgadmin_data:
    driver: local
  redis_data:
    driver: local

networks:
  quiklii_network:
    driver: bridge

# Configuraciones adicionales para desarrollo
# Para ejecutar:
# docker-compose up -d          # Iniciar servicios en background
# docker-compose down           # Detener servicios
# docker-compose logs -f        # Ver logs
# docker-compose exec postgres psql -U quiklii_user -d quiklii_db  # Conectar a PostgreSQL
